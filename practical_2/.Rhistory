# London Borough compared to the UK average
Life_expectancy4 <- Life_expectancy %>%
mutate(UKdiff = averagelifeexpectancy-81.16)%>%
mutate(across(is.numeric, round, 3))%>%
mutate(across(UKdiff, round, 0))
#plot
plot(LondonBoroughs$male_life_expectancy_2009_13,
LondonBoroughs$percent_children_in_reception_year_who_are_obese_2011_12_to_2013_14)
# Pimp my graph
install.packages("plotly")
library(plotly)
plot_ly(LondonBoroughs,
#data for x axis
x = ~male_life_expectancy_2009_13,
#data for y axis
y = ~percent_children_in_reception_year_who_are_obese_2011_12_to_2013_14,
#attribute to display when hovering
text = ~borough,
type = "scatter",
mode = "markers")
plot_ly(LondonBoroughs,
#data for x axis
x = ~male_life_expectancy_2009_13,
#data for y axis
y = ~percent_children_in_reception_year_who_are_obese_2011_12_to_2013_14,
#attribute to display when hovering
text = ~borough,
type = "scatter",
mode = "markers")
library(plotly)
plot_ly(LondonBoroughs,
#data for x axis
x = ~male_life_expectancy_2009_13,
#data for y axis
y = ~percent_children_in_reception_year_who_are_obese_2011_12_to_2013_14,
#attribute to display when hovering
text = ~borough,
type = "scatter",
mode = "markers")
Life_expectancy4map <- EW %>%
inner_join(.,
Life_expectancy4,
by = c("lad15cd" = "new_code"))%>%
distinct(.,lad15cd,
.keep_all = TRUE)
library(dplyr)
Life_expectancy4map <- EW %>%
inner_join(.,
Life_expectancy4,
by = c("lad15cd" = "new_code"))%>%
distinct(.,lad15cd,
.keep_all = TRUE)
View(Life_expectancy4)
View(EW)
library(dplyr)
Life_expectancy4map <- EW %>%
inner_join(.,
Life_expectancy4,
by = c("lad11cd" = "new_code"))%>%
distinct(.,lad11cd,
.keep_all = TRUE)
library(sf)
Life_expectancy4map <- EW %>%
inner_join(.,
Life_expectancy4,
by = c("lad11cd" = "new_code"))%>%
distinct(.,lad11cd,
.keep_all = TRUE)
tmap_mode("view")
library(tmap)
library(tmaptools)
tmap_mode("view")
qtm(BoroughDataMap,
fill = "rate_of_job_seekers_allowance_jsa_claimants_2015")
install.packages(c("OpenStreetMap"))
install.packages("rJava")
library(sf)
library("OpenStreetMap")
#create a box (termed bounding box) around London using the st_box()
tmaplondon <- BoroughDataMap %>%
st_bbox(.) %>%
tmaptools::read_osm(., type = "osm", zoom = NULL)
tmap_mode("plot")
tm_shape(tmaplondon)+
tm_rgb()+
tm_shape(BoroughDataMap) +
tm_polygons("rate_of_job_seekers_allowance_jsa_claimants_2015",
style="jenks",
palette="YlOrBr",
midpoint=NA,
title="Rate per 1,000 people",
alpha = 0.5) +
tm_compass(position = c("left", "bottom"),type = "arrow") +
tm_scale_bar(position = c("left", "bottom")) +
tm_layout(title = "Job seekers' Allowance Claimants", legend.position = c("right", "bottom"))
tmap_mode("view")
tm_shape(BoroughDataMap) +
tm_polygons("rate_of_job_seekers_allowance_jsa_claimants_2015",
style="jenks",
palette="YlOrBr",
midpoint=NA,
title="Rate per 1,000 people",
alpha = 0.5) +
tm_basemap(server = "OpenStreetMap") +
tm_compass(position = c("left", "bottom"),type = "arrow") +
tm_scale_bar(position = c("left", "bottom")) +
tm_layout(title = "Job seekers' Allowance Claimants")
library(sf)
library(dplyr)
Life_expectancy4map <- EW %>%
inner_join(.,
Life_expectancy4,
by = c("lad11cd" = "new_code"))%>%
distinct(.,lad11cd,
.keep_all = TRUE)
tmap_mode("plot")
tm_shape(tmaplondon)+
tm_rgb()+
tm_shape(Life_expectancy4map) +
tm_polygons("UKdiff",
style="pretty",
palette="Blues",
midpoint=NA,
title="Number of years",
alpha = 0.5) +
tm_compass(position = c("left", "bottom"),type = "arrow") +
tm_scale_bar(position = c("left", "bottom")) +
tm_layout(title = "Difference in life expectancy", legend.position = c("right", "bottom"))
library(sf)
library("OpenStreetMap")
#create a box (termed bounding box) around London using the st_box()
tmapwashington <-  DistrictDataMap%>%
st_bbox(.) %>%
tmaptools::read_osm(., type = "osm", zoom = NULL)
WashingtonDataOSK<- read.csv("/Users/yujiama/casa/casa05/practical-2/practical_2/prac2homework_data/county_only.csv",
header = TRUE,
sep = ",",
encoding = "latin1")
library(here)
here::here()
WashingtonDataOSK<- read.csv(here::here("prac2homework_data","county_only.csv"),
header = TRUE, sep = ",",
encoding = "latin1")
install.packages("tidyr")
library(tidyr)
library(dplyr)
class(WashingtonDataOSK)
Datatypelist <- WashingtonDataOSK %>%
summarise_all(class) %>%
pivot_longer(everything(),
names_to="All_variables",
values_to="Variable_class")
print(Datatypelist,n=20)
summary(df)
WashingtonDataOSK%>%
colnames()%>%
# just look at the head, top5
head()
AverageMetStandard<- WashingtonDataOSK %>%
filter(average_percent_met_standard>0.482845513)
library(tidyr)
library(dplyr)
class(WashingtonDataOSK)
Datatypelist <- WashingtonDataOSK %>%
summarise_all(class) %>%
pivot_longer(everything(),
names_to="All_variables",
values_to="Variable_class")
print(Datatypelist,n=20)
summary(df)
WashingtonDataOSK%>%
colnames()%>%
# just look at the head, top5
head()
AverageMetStandard<- WashingtonDataOSK %>%
filter(average_percent_met_standard>0.482845513)
library(tmap)
library(tmaptools)
library(sf)
# this will take a few minutes
# geojson in local folder
file.exists(here::here("prac2homework_data",
"Washington_Counties_with_Natural_Shoreline___washsh_area.geojson"))
# shapefile in local folder
WH <- st_read(here::here("prac2homework_data",
"Washington_Counties_with_Natural_Shoreline___washsh_area.shp"))
WashingtonMap <- qtm(WH)
WashingtonMap
names(WH)
names(WashingtonDataOSK)
library(janitor)
WashingtonDataOSK <- clean_names(WashingtonDataOSK)
library(janitor)
WashingtonDataOSK <- clean_names(WashingtonDataOSK)
#WH is the data we read in straight from the web
DistrictDataMap <- WH %>%
clean_names() %>%
merge(.,
WashingtonDataOSK,
by.x = "objectid",
by.y = "objectid",
no.dups = TRUE) %>%
distinct(objectid,
.keep_all = TRUE)
# Add a new column to indicate if county average is above or below state average
DistrictDataMap <- DistrictDataMap %>%
mutate(above_state_average = ifelse(average_percent_met_standard > 0.482845513,
"Above", "Below"))
library(sf)
library("OpenStreetMap")
#create a box (termed bounding box) around London using the st_box()
tmapwashington <-  DistrictDataMap%>%
st_bbox(.) %>%
tmaptools::read_osm(., type = "osm", zoom = NULL)
library(tmap)
library(tmaptools)
tmap_mode("view")
tm_shape(DistrictDataMap)
library(tmap)
library(tmaptools)
tmap_mode("view")
tm_shape(DistrictDataMap) +
tm_polygons("above_state_average",
style="jenks",
palette="YlOrBr",
midpoint=NA,
title="Rate per 1,000 people",
alpha = 0.5) +
tm_basemap(server = "OpenStreetMap") +
tm_compass(position = c("left", "bottom"),type = "arrow") +
tm_scale_bar(position = c("left", "bottom")) +
tm_layout(title = "aboveorbelow_state_average")
tmap_mode("view")
tm_shape(DistrictDataMap) +
tm_polygons("above_state_average",
style="jenks",
palette="Bluesr",
midpoint=NA,
title="Rate per 1,000 people",
alpha = 0.5) +
tm_basemap(server = "OpenStreetMap") +
tm_compass(position = c("left", "bottom"),type = "arrow") +
tm_scale_bar(position = c("left", "bottom")) +
tm_layout(title = "aboveorbelow_state_average")
tmap_mode("view")
tm_shape(DistrictDataMap) +
tm_polygons("above_state_average",
style="jenks",
palette="Blues",
midpoint=NA,
title="Rate per 1,000 people",
alpha = 0.5) +
tm_basemap(server = "OpenStreetMap") +
tm_compass(position = c("left", "bottom"),type = "arrow") +
tm_scale_bar(position = c("left", "bottom")) +
tm_layout(title = "aboveorbelow_state_average")
tmap_mode("view")
tm_shape(DistrictDataMap) +
tm_polygons("above_state_average",
style="jenks",
palette="Red",
midpoint=NA,
title="above or lower than the average percent in the State",
alpha = 0.5) +
tm_basemap(server = "OpenStreetMap") +
tm_compass(position = c("left", "bottom"),type = "arrow") +
tm_scale_bar(position = c("left", "bottom")) +
tm_layout(title = "aboveorbelow_state_average")
library(tmap)
library(tmaptools)
tmap_mode("view")
tm_shape(DistrictDataMap) +
tm_polygons("above_state_average",
style="jenks",
palette="Reds",
midpoint=NA,
title="above or lower than the average percent in the State",
alpha = 0.5) +
tm_basemap(server = "OpenStreetMap") +
tm_compass(position = c("left", "bottom"),type = "arrow") +
tm_scale_bar(position = c("left", "bottom")) +
tm_layout(title = "aboveorbelow_state_average")
tmap_mode("view")
tm_shape(DistrictDataMap) +
tm_polygons("above_state_average",
style = "fixed",  # 使用手动固定分段
breaks = c(min(DistrictDataMap$above_state_average), 0, max(DistrictDataMap$above_state_average)),  # 将数据分成 above 和 below
palette = c("lightcoral", "darkred"),
midpoint=NA,
title="above or lower than the average percent in the State",
alpha = 0.5) +
tm_basemap(server = "OpenStreetMap") +
tm_compass(position = c("left", "bottom"),type = "arrow") +
tm_scale_bar(position = c("left", "bottom")) +
tm_layout(title = "aboveorbelow_state_average")
library(tmap)
library(tmaptools)
tmap_mode("view")
tm_shape(DistrictDataMap) +
tm_polygons("above_state_average",
style = "fixed",  # 使用手动固定分段
breaks = c(min(DistrictDataMap$above_state_average), 0, max(DistrictDataMap$above_state_average)),  # 将数据分成 above 和 below
palette = c("lightblue", "darkred"),
midpoint=NA,
title="above or lower than the average percent in the State",
alpha = 0.5) +
tm_basemap(server = "OpenStreetMap") +
tm_compass(position = c("left", "bottom"),type = "arrow") +
tm_scale_bar(position = c("left", "bottom")) +
tm_layout(title = "aboveorbelow_state_average")
tmap_mode("view")
tm_shape(DistrictDataMap) +
tm_polygons("above_state_average",
style = "fixed",  # 使用手动固定分段
breaks = c(min(DistrictDataMap$above_state_average), 0, max(DistrictDataMap$above_state_average)),  # 将数据分成 above 和 below
palette = c("darkred", "lightcoral"),
midpoint=NA,
title="above or lower than the average percent in the State",
alpha = 0.5) +
tm_basemap(server = "OpenStreetMap") +
tm_compass(position = c("left", "bottom"),type = "arrow") +
tm_scale_bar(position = c("left", "bottom")) +
tm_layout(title = "aboveorbelow_state_average")
library(sf)
library("OpenStreetMap")
#create a box (termed bounding box) around London using the st_box()
tmapwashington <-  DistrictDataMap%>%
st_bbox(.) %>%
tmaptools::read_osm(., type = "osm", zoom = NULL)
tmap_mode("plot")
tm_shape(DistrictDataMap) +
tm_polygons("above_state_average",
style = "fixed",  # 使用手动固定分段
breaks = c(min(DistrictDataMap$above_state_average), 0, max(DistrictDataMap$above_state_average)),  # 将数据分成 above 和 below
palette = c("darkred", "lightcoral"),
midpoint=NA,
title="above or lower than the average percent in the State",
alpha = 0.5) +
tm_basemap(server = "OpenStreetMap") +
tm_compass(position = c("left", "bottom"),type = "arrow") +
tm_scale_bar(position = c("left", "bottom")) +
tm_layout(title = "aboveorbelow_state_average")
library(sf)
library("OpenStreetMap")
#create a box (termed bounding box) around London using the st_box()
tmapwashington <-  DistrictDataMap%>%
st_bbox(.) %>%
tmaptools::read_osm(., type = "osm", zoom = NULL)
library(tmap)
library(tmaptools)
tmap_mode("plot")
tm_shape(DistrictDataMap) +
tm_polygons("above_state_average",
style = "fixed",  # 使用手动固定分段
breaks = c(min(DistrictDataMap$above_state_average), 0, max(DistrictDataMap$above_state_average)),  # 将数据分成 above 和 below
palette = c("darkred", "lightcoral"),
midpoint=NA,
title="above or lower than the average percent in the State",
alpha = 0.5) +
tm_basemap(server = "OpenStreetMap") +
tm_compass(position = c("left", "bottom"),type = "arrow") +
tm_scale_bar(position = c("left", "bottom")) +
tm_layout(title = "aboveorbelow_state_average")
library(sf)
library("OpenStreetMap")
#create a box (termed bounding box) around London using the st_box()
tmaplondon <- BoroughDataMap %>%
st_bbox(.) %>%
tmaptools::read_osm(., type = "osm", zoom = NULL)
tmap_mode("plot")
library(tmap)
library(tmaptools)
tmap_mode("view")
qtm(BoroughDataMap,
fill = "rate_of_job_seekers_allowance_jsa_claimants_2015")
library(tmap)
library(tmaptools)
tmap_mode("view")
qtm(DistrictDataMap,
fill = "above_state_average")
library(sf)
library("OpenStreetMap")
#create a box (termed bounding box) around London using the st_box()
tmapwashington <-  DistrictDataMap%>%
st_bbox(.) %>%
tmaptools::read_osm(., type = "osm", zoom = NULL)
library(tmap)
library(tmaptools)
tmap_mode("plot")
tm_shape(DistrictDataMap) +
tm_polygons("above_state_average",
style = "fixed",  # 使用手动固定分段
breaks = c(min(DistrictDataMap$above_state_average), 0, max(DistrictDataMap$above_state_average)),  # 将数据分成 above 和 below
palette = c("darkred", "lightcoral"),
midpoint=NA,
title="above or lower than the average percent in the State",
alpha = 0.5) +
tm_basemap(server = "OpenStreetMap") +
tm_compass(position = c("left", "bottom"),type = "arrow") +
tm_scale_bar(position = c("left", "bottom")) +
tm_layout(title = "aboveorbelow_state_average")
tmapwashington <-  DistrictDataMap%>%
st_bbox(.) %>%
tmaptools::read_osm(., type = "osm", zoom = NULL)
library(tmap)
library(tmaptools)
tmap_mode("view")
qtm(DistrictDataMap,
fill = "above_state_average")
library(sf)
library("OpenStreetMap")
#create a box (termed bounding box) around London using the st_box()
tmapwashington <-  DistrictDataMap%>%
st_bbox(.) %>%
tmaptools::read_osm(., type = "osm", zoom = NULL)
library("OpenStreetMap")
tmap_mode("plot")
tm_shape(DistrictDataMap) +
tm_polygons("above_state_average",
style = "fixed",  # 使用手动固定分段
breaks = c(min(DistrictDataMap$above_state_average), 0, max(DistrictDataMap$above_state_average)),  # 将数据分成 above 和 below
palette = c("darkred", "lightcoral"),
midpoint=NA,
title="above or lower than the average percent in the State",
alpha = 0.8) +
tm_basemap(server = "OpenStreetMap") +
tm_compass(position = c("left", "bottom"),type = "arrow") +
tm_scale_bar(position = c("left", "bottom")) +
tm_layout(title = "aboveorbelow_state_average")
tmap_mode("view")
tm_shape(DistrictDataMap) +
tm_polygons("above_state_average",
style = "fixed",  # 使用手动固定分段
breaks = c(min(DistrictDataMap$above_state_average), 0, max(DistrictDataMap$above_state_average)),  # 将数据分成 above 和 below
palette = c("darkred", "lightcoral"),
midpoint=NA,
title="above or lower than the average percent in the State",
alpha = 0.5) +
tm_basemap(server = "OpenStreetMap") +
tm_compass(position = c("left", "bottom"),type = "arrow") +
tm_scale_bar(position = c("left", "bottom")) +
tm_layout(title = "aboveorbelow_state_average")
tmap_mode("view")
tm_shape(DistrictDataMap) +
tm_polygons("above_state_average",
style = "fixed",  # 使用手动固定分段
breaks = c(min(DistrictDataMap$above_state_average), 0, max(DistrictDataMap$above_state_average)),  # 将数据分成 above 和 below
palette = c("darkred", "lightcoral"),
midpoint=NA,
title="above or lower than the average percent in the State",
alpha = 0.8) +
tm_basemap(server = "OpenStreetMap") +
tm_compass(position = c("left", "bottom"),type = "arrow") +
tm_scale_bar(position = c("left", "bottom")) +
tm_layout(title = "aboveorbelow_state_average")
install.packages("tmap")
library(tmap)
library(tmaptools)
library(sf)
library("OpenStreetMap")
#create a box (termed bounding box) around London using the st_box()
tmapwashington <-  DistrictDataMap%>%
st_bbox(.) %>%
tmaptools::read_osm(., type = "osm", zoom = NULL)
library(tmap)
library(tmaptools)
tmap_mode("view")
qtm(DistrictDataMap,
fill = "above_state_average")
library(sf)
library("OpenStreetMap")
#create a box (termed bounding box) around London using the st_box()
tmapwashington <-  DistrictDataMap%>%
st_bbox(.) %>%
tmaptools::read_osm(., type = "osm", zoom = NULL)
tm_shape(DistrictDataMap) +
tm_polygons("above_state_average",
style = "fixed",  # 使用手动固定分段
breaks = c(min(DistrictDataMap$above_state_average), 0, max(DistrictDataMap$above_state_average)),  # 将数据分成 above 和 below
palette = c("darkred", "lightcoral"),
midpoint=NA,
title="above or lower than the average percent in the State",
alpha = 0.8) +
tm_basemap(server = "OpenStreetMap") +
tm_compass(position = c("left", "bottom"),type = "arrow") +
tm_scale_bar(position = c("left", "bottom")) +
tm_layout(title = "aboveorbelow_state_average")
tmap_mode("plot")
library(tmap)
library(tmaptools)
tmap_mode("plot")
qtm(DistrictDataMap,
fill = "above_state_average")
library(sf)
library("OpenStreetMap")
#create a box (termed bounding box) around London using the st_box()
tmapwashington <-  DistrictDataMap%>%
st_bbox(.) %>%
tmaptools::read_osm(., type = "osm", zoom = NULL)
tmap_mode("plot")
tm_shape(DistrictDataMap) +
tm_polygons("above_state_average",
style = "fixed",  # 使用手动固定分段
breaks = c(min(DistrictDataMap$above_state_average), 0, max(DistrictDataMap$above_state_average)),  # 将数据分成 above 和 below
palette = c("darkred", "lightcoral"),
midpoint=NA,
title="above or lower than the average percent in the State",
alpha = 0.8) +
tm_basemap(server = "OpenStreetMap") +
tm_compass(position = c("left", "bottom"),type = "arrow") +
tm_scale_bar(position = c("left", "bottom")) +
tm_layout(title = "aboveorbelow_state_average")
